

    Handlers always run in the order they are defined, not in the order listed in the notify-statement. This is also the case for handlers using listen.

    Handler names and listen topics live in a global namespace.

    Handler names are templatable and listen topics are not.

    Use unique handler names. If you trigger more than one handler with the same name, the first one(s) get overwritten. Only the last one defined will run.

    You can notify a handler defined inside a static include.

    You cannot notify a handler defined inside a dynamic include.


The objective of this tutorial is to help you understand how to configure blue/green deployment of microservices running in Kubernetes with Istio. You donâ€™t need to have any prerequisites to explore this scenario except a basic idea of deploying pods and services in Kubernetes. We will configure everything from Minikube to Istio to the sample application.
Though Istio is capable of many things including secure service-to-service communication, automated logging of metrics, enforcing a policy for access controls, rate limits, and quotas, we will focus exclusively on the traffic management features.


Istio lets DevOps teams create rules to intelligently route the traffic to internal services. It is extremely simple to configure service-level properties like circuit breakers, timeouts, and retries, to set up a variety of deployment patterns including blue/green deployments and canary rollouts.
